apiVersion: v1
kind: Namespace
metadata: 
  name: my-ns
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv001
  namespace: my-ns
spec:
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  capacity: 
    storage: 1Gi
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: storage-1
  hostPath:
    path: /tmp/pv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc001
  namespace: my-ns
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
  storageClassName: storage-1
  volumeName: pv001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: my-ns
  name: depl001
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  selector:
    matchLabels:
      app: front-end
  replicas: 10
  template:
    metadata:
      name: depl001-pod
      labels:
        app: front-end
    spec:
      containers:
      - name: depl001-cont
        image: aamirpinger/helloworld
        volumeMounts:
        - mountPath: /tmp/pv
          name: pv001
        ports:
        - containerPort: 80
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 2
          successThreshold: 1
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 15 
          periodSeconds: 20
          timeoutSeconds: 2
          failureThreshold: 2
          successThreshold: 1
      volumes:
      - name: pv001
        persistentVolumeClaim:
          claimName: pvc001
---
apiVersion: v1
kind: Service
metadata:
  name: svc001
  namespace: my-ns
spec:
  type: NodePort
  selector:
    app: front-end
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
